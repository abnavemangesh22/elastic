
backup and snapshot:

PUT _snapshot/mysnapshotrepo-1
{
  "type": "fs",
  "settings": {
    "location": "/mybackup-elastic"
  }
}

 put _snapshot/mysnapshotrepo/myfirstbackup
 {
   "indices" : "*",
   "include_global_state": true
 }

get _snapshot/mysnapshotrepo/myfirstbackup




#snapshot policy


PUT _slm/policy/nightly-snapshot
{
  "schedule": "0 30 1 * * ?",
  "name": "<nightly-snap-{now/d}>",
  "repository": "mysnapshotrepo",
  "config": {
    "indices" : "*",
   "include_global_state": true
  },
  "retention": {
    "expire_after": "30d",
    "min_count": 5,
    "max_count": 50
  }
}

get _slm/policy/nightly-snapshot


POST _slm/policy/nightly-snapshot/_execute

GET _snapshot/mysnapshotrepo/nightly-snap-2024.01.31-mcgh1dyyq1c99iwu9sx3ja


======================================================================================================


Implement cross-cluster replication:

	
curl -XPOST "localhost:9500/_license/start_trial?acknowledge=true"


	
# Configure a Remote Cluster
PUT _cluster/settings
{
  "persistent": {
    "cluster": {
      "remote": {
        "secondary_cluster": {
          "seeds": ["localhost:9600"]
        }
      }
    }
  }
}



	
GET _cluster/settings
 
GET /_remote/info
 
GET _cat/indices
 
DELETE shakespeare
 
GET shakespeare




# Remove Remote Cluster
PUT _cluster/settings
{
  "persistent": {
    "cluster": {
      "remote": {
        "secondary_cluster": {
          "seeds": ""
        }
      }
    }
  }
}
 
GET _cluster/settings
 
# Configure a Remote Cluster
PUT _cluster/settings
{
  "persistent": {
    "cluster": {
      "remote": {
        "secondary_cluster": {
          "seeds": ["localhost:9600"]
        }
      }
    }
  }
}
GET _cluster/settings
 
GET /_remote/info
 
GET _cat/indices
 
DELETE shakespeare
 
 
 
GET shakespeare
# MANUAL FOLLOW
PUT shakespeare/_ccr/follow
{
  "remote_cluster": "secondary_cluster",
  "leader_index": "shakespeare"
}


GET shakespeare
GET shakespeare/_search
 
GET /shakespeare/_ccr/stats





	
PUT _ccr/auto_follow/shakespeare
{
  "remote_cluster": "secondary_cluster",
  "leader_index_patterns": [
    "shakespeare-*"
    ]
}





Diagnose shard issues and repair a cluster's health:

put shardissue


get _cat/shards?v

get _cat/shards/shardissue?v

get _cluster/allocation/explain
{
  "index": "shardissue",
  "shard": 0,
  "primary": false
}

PUT shardissue/_settings
{
  "number_of_replicas": 0
}




Configure a snapshot to be searchable:

POST _snapshot/mysnapshotrepo/myfirstbackup/_restore
{
  "indices": "mybusinessindex"
}



 
# ACTIVATE TRIAL LICENSE FOR 30 DAYS
POST _license/start_trial?acknowledge=true
 
 
# MOUNT A SEARCHABLE INDEX
POST _snapshot/mysnapshotrepository/myfirstbackup/_mount
{
  "index": "ecommerce",
  "renamed_index": "ecommerce_from_snapshot"
}
 
# CONFIRM THE INDEX
GET _cat/indices
 
# DELETE THE SEARCHABLE SNAPSHOT INDEX
DELETE ecommerce_from_snapshot
 
# CONFIRM THE DELETED INDEX
GET _cat/indices























Implement cross cluter replication:
